I"1<p>After implementing the <a href="https://jekylltools.github.io/jekyll-ideal-image-slider-include/examples/">Ideal Image Slider</a> on two different Jekyll site and writing a blog post about it I tested it on mobile and was quite disheartened. Not only did the slider not rotate automatically, the user wasn’t even able to navigate it manually. I quickly had to replace it, and what I found was leaps and bounds better. <a href="http://flexslider.woothemes.com/">Flexslider 2</a> by WooCommerce claims to be “The best responsive slider. Period.”, and at least when it comes to jekyll I believe it to be true. Getting set up with Flexslider is very intuitive and it looks beautiful. The customizable captions, nav controls, and thumbnail sliders make it incredibly powerful while it remains simple to implement.</p>

<div class="row">
	<div class="six columns">
		<p><a href="http://davidollerhead.com/blog/2013/08/06/lets-build-a-carousel.html">David Ollerhead</a> gives a pretty good example of creating the slider for pictures, but it didn't work for me the way he set his up. Furthermore, I wanted to use mine to display posts whereas his was just a carousel of pictures. After some tinkering it quickly came together and can be seen to the right displaying all my Recent Posts.</p>

		<h3>Implementing the Slider</h3>

		<p>Setting up the slider was incredibly easy. The steps basically break down into adding and linking to the css &amp; javascript dependencies, creating the sliders, and including them within the page.</p>

		<h2>Step 1: Add the Dependencies</h2>

		<p>There are only 5 different dependency files necessary to get the slider to run and they can all be found in the folder downloaded from the <a href="https://woocommerce.com/flexslider/">official WooCommerce Flexslider page</a>.</p>
	</div>
	<div class="six columns">
		<!--
    Posts Flexslider Display
    Brendan Thompson

    A Flexslider displaying Posts with images and captions sorted chronologically
 -->

 <div>
	<div class="flexslider flex-design">
		<ul class="slides">
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/ionic-logo-slider.png">
	  			<a href="/flatten-text-on-image">
		    		<img src="/assets/img/post-images/slider-images/ionic-logo-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">Flattening Text Onto an Image in Ionic</p>
		    		<p class="flex-caption">This article explains how to flatten text onto an image in Ionic using a basic HTML Canvas element.</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/jekyll-logo-slider.png">
	  			<a href="/flexslider">
		    		<img src="/assets/img/post-images/slider-images/jekyll-logo-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">Flexslider in Jekyll</p>
		    		<p class="flex-caption">Implementing Flexslider in Jekyll in order to display posts and projects</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/project-images/slider-images/transy-logo-bat-slider.png">
	  			<a href="/transy-language-spec">
		    		<img src="/assets/img/project-images/slider-images/transy-logo-bat-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">Transy Language Specification</p>
		    		<p class="flex-caption">The Transy Language defined for the Compiler Construction course during the fall of 2017 at Transylvania University</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/ionic-logo-slider.png">
	  			<a href="/ionic-3">
		    		<img src="/assets/img/post-images/slider-images/ionic-logo-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">Introduction to the Ionic 3 Framework</p>
		    		<p class="flex-caption">An in depth introduction to the advanced software and concepts that come together to create the Ionic 3 hybrid mobile app development framework</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/slackapi-angularjs-slider.jpg">
	  			<a href="/integrating-slack">
		    		<img src="/assets/img/post-images/slider-images/slackapi-angularjs-slider.jpg" />
		    		<hr />
		    		<p class="flex-caption-title">Integrating Slack In Ionic</p>
		    		<p class="flex-caption">Follow along as I describe how to send an Http post request in Angular 2 as is implemented in Ionic hybrid mobile app development</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/website-header-pic-slider.png">
	  			<a href="/website-design">
		    		<img src="/assets/img/post-images/slider-images/website-header-pic-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">Creating my own website</p>
		    		<p class="flex-caption">Check out this brief description of getting started with Jekyll and getting my first website off the ground</p>
		    	</a>
	 		</li>
	  		
	  		<li data-thumb="/assets/img/post-images/slider-images/juce-logo-slider.png">
	  			<a href="/juce-intro">
		    		<img src="/assets/img/post-images/slider-images/juce-logo-slider.png" />
		    		<hr />
		    		<p class="flex-caption-title">An Introduction to the JUCE Framework</p>
		    		<p class="flex-caption">A simple introduction to the JUCE C++ Audio Development Framework</p>
		    	</a>
	 		</li>
	  		
		</ul>
	</div>
</div>
	</div>
</div>

<h4 id="the-css">The CSS</h4>

<p>In the folder downloaded there should be a file called <code class="highlighter-rouge">flexslider.css</code> which should be added to the Jekyll site in the folder <code class="highlighter-rouge">/assets/css/</code></p>

<p>The CSS file:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flexslider.css
</code></pre></div></div>

<h4 id="the-javascript">The JavaScript</h4>

<p>Again in the folder downloaded there should be two <code class="highlighter-rouge">.js</code> files, both of which should be added to the jekyll site in a new folder called <code class="highlighter-rouge">/assets/js/flexslider</code></p>

<p>The two JavaScript files:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jquery.flexslider.js
jquery.flexslider-min.js
</code></pre></div></div>

<h4 id="the-navigation-icon-fonts">The Navigation Icon Fonts</h4>

<p>For the flexslider, the arrows that work as navigation are actually defined as fonts, and therefore must be included in <code class="highlighter-rouge">/assets/css/fonts/</code>. I was able to get it to work with just two of the four files that got downloaded in the <code class="highlighter-rouge">fonts</code> folder from Flexslider.</p>

<p>The two Nav Icon Font files:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flexslider-icon.ttf
flexslider-icon.woff
</code></pre></div></div>

<h2 id="step-2-create-the-slider">Step 2: Create the Slider</h2>

<p>To create the slider it must be initialized in JavaScript and defined in HTML.</p>

<h4 id="initializing-the-slider">Initializing the Slider</h4>

<p>In a file called <code class="highlighter-rouge">/assets/js/app.js</code> the slider needs to be initialized, which is where most of the customization comes in. The best way to do this is to find the version of code described on the <a href="http://flexslider.woothemes.com/">flexslider demo site</a> which will look something like below:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// Initialise FlexSlider for Carousels
$(window).load(function() {
    $('.flexslider').flexslider({
    animation: "fade",
    directionNav: true,
    slideshowSpeed: 5000,
    animationSpeed: 600,
    touch: true
    });
});
</code></pre></div></div>

<p>These are the options that I have found:</p>

<ul>
  <li><code class="highlighter-rouge">Animation</code>: “fade” or “slide”</li>
  <li><code class="highlighter-rouge">controlNav</code>: “thumbnails” or false (this is for the thumbnail sliders)</li>
  <li><code class="highlighter-rouge">directionNav</code>: true or false (this is for the directional arrows)</li>
  <li><code class="highlighter-rouge">slideshow</code>: true or false</li>
  <li><code class="highlighter-rouge">slideshowSpeed</code>: number in milliseconds</li>
  <li><code class="highlighter-rouge">animationSpeed</code>: number in milliseconds</li>
  <li><code class="highlighter-rouge">animationLoop</code>: true or false</li>
  <li><code class="highlighter-rouge">touch</code>: true or false (for touchscreens)</li>
  <li><code class="highlighter-rouge">itemWidth</code>: width in pixels</li>
  <li><code class="highlighter-rouge">itemHeight</code>: height in pixels</li>
  <li><code class="highlighter-rouge">itemMargin</code>: margin in pixels</li>
  <li><code class="highlighter-rouge">asNavFor</code>: used by thumbnail controlNav sliders to select main slider</li>
  <li><code class="highlighter-rouge">sync</code>: used by main slider to sync with thumbnail controlNav slider</li>
</ul>

<h4 id="the-html">The HTML</h4>

<p>In the <code class="highlighter-rouge">/_includes/</code> folder add the HTML that describes the markup for the slider.</p>

<p>My <code class="highlighter-rouge">flexslider-posts.html</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div&gt;
  	&lt;div class="home-title"&gt;
    	&lt;h3&gt;Recent Posts&lt;/h3&gt;
  	&lt;/div&gt;
	&lt;div class="flexslider"&gt;
		&lt;ul class="slides"&gt;
	  		{% for page in site.categories.blog %}
	  		&lt;li&gt;
	  			&lt;a href="{{ site.url}}{{ page.permalink }}"&gt;
		    		&lt;img src="{{ page.image-slider }}"&gt;
		    		&lt;p class="flex-caption"&gt;{{ page.excerpt }}&lt;/p&gt;
		    	&lt;/a&gt;
	 		&lt;/li&gt;
	  		{% endfor %}
		&lt;/ul&gt;
	&lt;/div&gt;
	&lt;p style="text-align: center"&gt;&lt;a href="{{ site.url }}/posts-page"&gt;See All Posts&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</code></pre></div></div>

<p>The bulk of the include is where the flexslider is dynamically compiled based off the posts. Basically for each post in the site with the category blog a <code class="highlighter-rouge">li</code> is generated. They are all contained in the <code class="highlighter-rouge">&lt;ul class="slides&gt;"</code> which is nested in the <code class="highlighter-rouge">&lt;div class="flexslider"&gt;</code>. All of the content is taken from the front matter of the individual posts.</p>

<h2 id="step-3-link-to-the-necessary-files">Step 3: Link to the necessary files</h2>

<h4 id="the-stylesheet">The StyleSheet</h4>

<p>The main stylesheet needs to be included in the <code class="highlighter-rouge">&lt;head&gt;</code> of the page. For me, I included the code for linking to it in my <code class="highlighter-rouge">/_includes/head.html</code> which gets included in my main layout called <code class="highlighter-rouge">page.html</code></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;link rel="stylesheet" href="/assets/css/flexslider.css"&gt;
</code></pre></div></div>

<h4 id="the-scripts">The Scripts</h4>

<p>The scripts must be included at the very end of the <code class="highlighter-rouge">&lt;body&gt;</code> of the page. For me, I have an include called <code class="highlighter-rouge">scripts.html</code> where all of my scripts get linked.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Flexslider Scripts
=================================================--&gt;
	&lt;!-- Google CDN Hosted jQuery  --&gt;
	&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"&gt;&lt;/script&gt;
	&lt;!-- Flexslider Library  --&gt;
	&lt;script src="/assets/js/flexslider/jquery.flexslider-min.js"&gt;&lt;/script&gt;
	&lt;!-- Initialisation Code  --&gt;
	&lt;script src="/assets/js/app.js"&gt;&lt;/script&gt;
</code></pre></div></div>

<h2 id="step-4-display-the-slider">Step 4: Display the Slider</h2>

<h4 id="include-the-slider">Include the Slider</h4>

<p>To implement the slider onto an actual page just include it!</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% include flexslider-posts.html %}
</code></pre></div></div>

<h2 id="thats-it">Thats it!</h2>

<p>Implementing the Flexslider is a fairly straightforward process, but if you get caught up anywhere feel free to contact me. I customized my captions by overriding the <code class="highlighter-rouge">flex-caption</code> class in my <code class="highlighter-rouge">/assets/css/main.scss</code>. Good Luck!</p>
:ET